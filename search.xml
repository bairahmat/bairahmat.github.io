<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Nginx as a reverse proxy for Apache</title>
      <link href="/2018/06/06/Nginx%20as%20a%20reverse%20proxy%20for%20Apache/"/>
      <url>/2018/06/06/Nginx%20as%20a%20reverse%20proxy%20for%20Apache/</url>
      <content type="html"><![CDATA[<h4 id="Nginx-dan-Apache"><a href="#Nginx-dan-Apache" class="headerlink" title="Nginx dan Apache"></a>Nginx dan Apache</h4><p> Nginx dan Apache adalah server web yang kuat. Kekuatan Apache dan kecepatan Nginx sudah sangat dikenal, Namun, keduanya memang memiliki kekurangan. Apache sulit di memori server sementara Nginx tidak dapat memproses PHP sendiri dan memerlukan bantuan PHP-FPM atau modul untuk konten dinamis.</p><p> Dalam catatan ini, kita akan menggabungkan dua server web untuk bisa mendapatkan hasil terbaik satu sama lain, Kita akan menetapkan Nginx sebagai prosesor konten statis dan Apache untuk memproses konten belakang dan dinamis.</p><h4 id="Install-and-Konfigurasi-Nginx"><a href="#Install-and-Konfigurasi-Nginx" class="headerlink" title="Install and Konfigurasi Nginx"></a>Install and Konfigurasi Nginx</h4><ul><li><p>Update repositories</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure></li><li><p>Install Epel repositories</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release</span><br></pre></td></tr></table></figure></li><li><p>Install Nginx di Centos 7</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br></pre></td></tr></table></figure></li><li><p>Enable dan start Nginx service</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx</span><br><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure></li><li><p>Membuat Konfigurasi Nginx</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/nginx/conf.d/default.conf</span><br></pre></td></tr></table></figure><p>  contoh konfigurasi :</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">      listen   80; </span><br><span class="line"></span><br><span class="line">      root /usr/share/nginx/html/; </span><br><span class="line">      index index.php index.html index.htm;</span><br><span class="line"></span><br><span class="line">      server_name _; </span><br><span class="line"></span><br><span class="line">      location / &#123;</span><br><span class="line">      try_files $uri $uri/ /index.php;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      location ~ \.php$ &#123;</span><br><span class="line">      </span><br><span class="line">      proxy_set_header X-Real-IP  $remote_addr;</span><br><span class="line">      proxy_set_header X-Forwarded-For $remote_addr;</span><br><span class="line">      proxy_set_header Host $host;</span><br><span class="line">      proxy_pass http://127.0.0.1:8080;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       location ~ /\.ht &#123;</span><br><span class="line">              deny all;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="Install-dan-Konfigurasi-Apache"><a href="#Install-dan-Konfigurasi-Apache" class="headerlink" title="Install dan Konfigurasi Apache"></a>Install dan Konfigurasi Apache</h4><ul><li><p>Install Apache web server:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install httpd</span><br></pre></td></tr></table></figure></li><li><p>Start dan enable apache service:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable httpd</span><br><span class="line">systemctl start httpd</span><br></pre></td></tr></table></figure></li><li><p>Konfigurasi Apache<br>  Kita perlu mengkonfigurasi Apache untuk menjadi backend, kita perlu mengkonfigurasi Apache pada port 8080:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/httpd/conf/httpd.conf</span><br></pre></td></tr></table></figure><p>  Temukan baris yang dimulai dengan “Listen”, ganti baris berikut dengan dibawah ini:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Listen 127.0.0.1:8080</span><br></pre></td></tr></table></figure><p>  Kemudian temukan baris yang dimulai dengan “DocumentRoot” dan ubah seperti di bawah ini:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DocumentRoot &quot;/path/folder root kita/&quot;</span><br></pre></td></tr></table></figure><p>  Save and Exit.</p></li></ul><h4 id="Install-PHP-v7-1-0"><a href="#Install-PHP-v7-1-0" class="headerlink" title="Install PHP v7.1.0"></a>Install PHP v7.1.0</h4><p> Hal pertama yang akan kita lakukan adalah menginstal tambahan CentOS7 repo yang berisi paket-paket yang diperlukan untuk PHP v7.1<br>     <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://rpms.remirepo.net/enterprise/remi-release-7.rpm</span><br><span class="line">rpm -Uvh remi-release-7.rpm</span><br></pre></td></tr></table></figure></p><p> Aktifkan repositori php71 yang dinonaktifkan secara default:<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install yum-utils -y</span><br><span class="line">yum-config-manager --enable remi-php71</span><br></pre></td></tr></table></figure></p><p> install PHP package:<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum --enablerepo=remi,remi-php71 install php-fpm php-common</span><br></pre></td></tr></table></figure></p><p> Install common modules:<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum --enablerepo=remi,remi-php71 install php-opcache php-pecl-apcu php-cli php-pear php-pdo php-mysqlnd php-pgsql php-pecl-mongodb php-pecl-redis php-pecl-memcache php-pecl-memcached php-gd php-mbstring php-mcrypt php-xml</span><br></pre></td></tr></table></figure></p><p> Konfigurasi PHP-FPM supaya berjalan di user apache<br>     <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/php-fpm.d/www.conf</span><br></pre></td></tr></table></figure></p><p> Temukan and replace baris berikut:<br>     <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user = apache</span><br><span class="line">group = apache</span><br></pre></td></tr></table></figure></p><p> dibawah baris ;listen = 127.0.0.1:9000 kita tambahkan file:<br>     <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen = /var/run/php-fpm/php-fpm.sock</span><br></pre></td></tr></table></figure></p><p> Simpan file dengan menekan CTRL + X. Dan akhirnya, mulai php-fpm dan aktifkan saat boot:<br>     <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start php-fpm.service</span><br><span class="line">systemctl enable php-fpm.service</span><br></pre></td></tr></table></figure></p><p> Sekian catatan ini, selamat mencoba dan semoga berhasil.</p>]]></content>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Install Linphone</title>
      <link href="/2018/05/09/Instalasi-Voip-Client/"/>
      <url>/2018/05/09/Instalasi-Voip-Client/</url>
      <content type="html"><![CDATA[<h2 id="Install-amp-Konfigurasi-Sofphone-Linphone-di-Bantos"><a href="#Install-amp-Konfigurasi-Sofphone-Linphone-di-Bantos" class="headerlink" title="Install &amp; Konfigurasi Sofphone Linphone di Bantos"></a>Install &amp; Konfigurasi Sofphone Linphone di Bantos</h2><p>Linphone adalah Softphone VOIP yang merupakan internet ponsel open source atau Voice Over IP phone (VoIP). Dengan linphone kita dapat berkomunikasi secara bebas dengan orang-orang melalui internet dengan suara. Linphone menggumnakan protokol SIP, sebuah standar terbuka untuk telepon internet. Linphone harus dapat saling beroperasi dengan sebagian SIP-kompatibel ponsel.</p><h3 id="Install-Linphone"><a href="#Install-Linphone" class="headerlink" title="Install Linphone"></a>Install Linphone</h3><p>Sebelum memasang linphone, tambahkan repositori linphone ke sistem :<br>Buka terminal gunakan perintah berikut :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:linphone/release</span><br></pre></td></tr></table></figure></p><img src="/2018/05/09/Instalasi-Voip-Client/install-linphone-1.png"><p>Kemudian jalankan perintah berikut untuk menerapkan perubahan di system :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></p><img src="/2018/05/09/Instalasi-Voip-Client/install-linphone-2.png"><p>Gunakan perintah berikut untuk menginstal perangkat lunak linphone :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install linphone -y</span><br></pre></td></tr></table></figure></p><img src="/2018/05/09/Instalasi-Voip-Client/install-linphone-3.png"><p>Cari dan klik ikon linphone di dashboard Bantos<br><img src="/2018/05/09/Instalasi-Voip-Client/install-linphone-4.png"></p><h3 id="Konfigurasi-Linphone"><a href="#Konfigurasi-Linphone" class="headerlink" title="Konfigurasi Linphone"></a>Konfigurasi Linphone</h3><p>Halaman beranda linphone akan muncul sebagai berikut.<br><img src="/2018/05/09/Instalasi-Voip-Client/konfig-linphone-1.png"></p><p>Pilih “I have already a SIP acount and I just want to use it”<br><img src="/2018/05/09/Instalasi-Voip-Client/konfig-linphone-2.png"></p><p>Masukkan detail Akun kita dan klik Apply.<br><img src="/2018/05/09/Instalasi-Voip-Client/konfig-linphone-3.png"></p><p>Sekarang kita dapat mulai menggunakan Linphone di Linux Bantos.<br><img src="/2018/05/09/Instalasi-Voip-Client/konfig-linphone-4.png"></p><p>Thank you! for using Linux Bantos.</p><h3 id="Penggunaan-Linphone"><a href="#Penggunaan-Linphone" class="headerlink" title="Penggunaan Linphone"></a>Penggunaan Linphone</h3><h4 id="Melakukan-Panggilan-VoIP"><a href="#Melakukan-Panggilan-VoIP" class="headerlink" title="Melakukan Panggilan VoIP"></a>Melakukan Panggilan VoIP</h4><p>Pastikan nomor tujuan kita sudah didaftarkan di server VoIP oleh administrator.</p><ul><li><p>Buka terlebih dahulu aplikasi linphone dan pastikan pc anda sudah terkoneksi internet atau dalam satu jaringan (koneksi lokal)</p><img src="/2018/05/09/Instalasi-Voip-Client/tampilan-awal.png"></li><li><p>Menambahkan kontak telpon (SIP VoIP).</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. Klik icon + </span><br><span class="line">2. Isi akun identitas teman atau nomor yang akan di panggil</span><br><span class="line">3. Ok</span><br></pre></td></tr></table></figure></li></ul><img src="/2018/05/09/Instalasi-Voip-Client/tambah-kontak.png"><ul><li><p>Setelah ditambahkan, coba kita lakukan dengan klik icon panggil</p><img src="/2018/05/09/Instalasi-Voip-Client/test-panggil.png"></li><li><p>Tunggu sampai nomor panggilan yang kita telfon menerima telfon kita.</p><img src="/2018/05/09/Instalasi-Voip-Client/panggilan.png"></li><li><p>Tampilan linphone di nomor yang kita panggil ( Answer atau Decline)</p><img src="/2018/05/09/Instalasi-Voip-Client/panggilan-1.png"></li><li><p>Tampilan setelah nomor yang kita panggil menerima panggilan kita</p><img src="/2018/05/09/Instalasi-Voip-Client/panggilan-2.png"></li></ul><h4 id="Melakukan-Kirim-Pesan-SMS-di-VoIP"><a href="#Melakukan-Kirim-Pesan-SMS-di-VoIP" class="headerlink" title="Melakukan Kirim Pesan (SMS) di VoIP"></a>Melakukan Kirim Pesan (SMS) di VoIP</h4><ul><li>Pengiriman pesan di VoIP dapat kita lakukan dengan klik icon Pesan di sebelah ikon panggil, dan ketik pesan di kolom bawah<br>Tulis pesan dan klik send.<img src="/2018/05/09/Instalasi-Voip-Client/sms-1.png"></li></ul><h4 id="Hasil-yang-didapatkan"><a href="#Hasil-yang-didapatkan" class="headerlink" title="Hasil yang didapatkan"></a>Hasil yang didapatkan</h4><p>Teknologi VoIP dengan sofphone Linphone sebagai client Dapat melakukan pengiriman pesan singkat, telefon, dan call video.</p><blockquote><p>Untuk kualitas bagus, lebih terjamin bila teknologi VoIP ini dilakukan di jaringan lokal, karna tidak ada permasalahan dalam pemakaian banwidth internet.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Catatan penting:</span><br><span class="line">Dalam tahap-tahap percobaan diatas, penggunaan user test dan 10001 adalah hanya contoh saja, pada percobaan anda sendiri anda harus menggunakan nama-nama yang lebih unik.</span><br><span class="line">Dalam tahap-tahap percobaan diatas, perhatikan penggunaan tx dan rx, tx untuk transmit, rx untuk receive.</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> Linphone </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Membuat Server Voip</title>
      <link href="/2018/05/09/Membuat-server-voip/"/>
      <url>/2018/05/09/Membuat-server-voip/</url>
      <content type="html"><![CDATA[<h4 id="Pengenalan-VoIP"><a href="#Pengenalan-VoIP" class="headerlink" title="Pengenalan VoIP"></a>Pengenalan VoIP</h4><p>Perkembangan teknologi telah membawa bisnis Telephony memasuki era baru yang menawarkan penyatuan seluruh komunikasi yang bersifat multimedia dan disalurkan melalui Internet, Perkembangan selanjutnya dari Internet ialah munculnya konsep yang dikenal dengan istilah Internet Telephony. </p><p>Konsep IP ini memungkinkan penggabungan seluruh aplikasi-aplikasi dan layanan-layanan yang ada dalam Internet dan Telephony, sehingga konsep ini diperkirakan pada masa yang akan datang akan dipakai secara luas, digabungkan dengan infrastruktur Telephony yang sudah ada dan dapat diprekdisikan Kemampuan untuk melakukan komunikasi suara melalui Protokol Internet secara umum dikenal dengan istilah “ Suara diatas Protokol Internet”, “IP Telephony”, “Voice over IP” atau VoIP dapat diartikan sebagai kemampuan untuk melakukan hubungan telepon – dan semua kemampuan lainnya yang bisa dilakukan oleh jaringan telepon publik dan mengirimkan faksimili diatas jaringan berbasis IP dengan kualitas layanan yang memadai.</p><p>Perkembangan VoIP tersebut telah memacu revolusi dalam industri telekomunikasi. Untuk itu dalam implementasi telepon berbasis IP ini yang diterapkan dalam suatu jaringan lokal dibutuhkan suatu pengaturan dalam penyampaian datagram di jaringan IP yang dikenal dengan istilah routing. Pengaturan routing dapat menentukan kinerja dari suatu jaringan, dimana apabila suatu jaringan intranet membutuhkan suatu kebijakan dalam pembagian alokasi bandwith maupun otorisasi penggunaan komputer.</p><h4 id="Perancangan-Server-VoIP"><a href="#Perancangan-Server-VoIP" class="headerlink" title="Perancangan Server VoIP"></a>Perancangan Server VoIP</h4><p>VoIP server yang akan dibangun adalah menggunakan sistem operasi Linux server. Sistem Operasi Linux yang akan digunakan untuk pembuatan Server VoIP adalah Briker 2.0.4. Briker adalah distribusi Linux yang didalamnya terdapat aplikasi server yang memungkinkan pengguna mengimplementasikan layanan VoIP, membangun sentral telepon sendiri. Pada perancangan VoIP IP Address yang digunakan adalah IP Address IPV4. Server VoIP yang akan dibangun akan menggunakan protocol  Session  Initiation  Protocol  (SIP).  SIP yang digunakan adalah berupa aplikasi yang berfungsi sebagai Proxy Server, Redirect Server dan Registrar Server. Aplikasi ini dinamakan dengan Asterisk.</p><p>Tahap perancangan server yang pertama dilakukan adalah melakukan instalasi system operasi Briker pada computer yang akan dijadikan sebagai server VoIP. Setelah melakukan instalasi kita akan melakukan konfigurasi pada sisi server, dengan melakukan pembagian ekstensi yaitu memberikan penomoran atau alamat pada sisi client untuk bisa saling berkomunikasi antar client yang lain. </p><p>Perancangan yang akan dilakukan pada sisi client adalah dengan menyiapkan sebuah komputer dan handphone yang memiliki system operasi android  yang akan difungsikan untuk melakukan dan menerima panggilan.    </p><h4 id="Instalasi-dan-Konfigurasi-Server-VoIP"><a href="#Instalasi-dan-Konfigurasi-Server-VoIP" class="headerlink" title="Instalasi dan Konfigurasi Server VoIP"></a>Instalasi dan Konfigurasi Server VoIP</h4><h5 id="Instalasi-Server-VoIP"><a href="#Instalasi-Server-VoIP" class="headerlink" title="Instalasi Server VoIP"></a>Instalasi Server VoIP</h5><p>Proses Instalasi</p><img src="/2018/05/09/Membuat-server-voip/install-briker-1.png"><center> Otomatis memeriksa perangkat keras jaringan, lalu mengkonfigurasi alamat IP secara otomatis </center><img src="/2018/05/09/Membuat-server-voip/install-briker-2.png"><center> Otomatis menghapus (format) hardisk dan menggunakan semua isi hardisk. </center><img src="/2018/05/09/Membuat-server-voip/install-briker-3.png"><center> Otomatis install base system dan software lainnya.</center><img src="/2018/05/09/Membuat-server-voip/install-briker-4.png"><center> Install GRUB boot loader </center><img src="/2018/05/09/Membuat-server-voip/install-briker-5.png"><center> Proses Finishing Installation, setelah itu mesin akan restart secara otomatis. </center><img src="/2018/05/09/Membuat-server-voip/install-briker-6.png"><center> Instalasi sistem selesai, mesin akan restart kembali. </center><h5 id="Konfigurasi-Server-VoIP"><a href="#Konfigurasi-Server-VoIP" class="headerlink" title="Konfigurasi Server VoIP"></a>Konfigurasi Server VoIP</h5><p>Web Login<br>Browse alamat IP Briker melalui web browser, setelah itu akan muncul halaman untuk login seperti gambar di bawah ini.</p><img src="/2018/05/09/Membuat-server-voip/voip-3.png"><hr><p>Tampilan awal setelah kita melakukan Login</p><img src="/2018/05/09/Membuat-server-voip/voip-2.png"><hr><p>Menu-menu untuk mengatur fitur dari Server VoIP, antara lain pengaturan extensions, trunks dan routes. Fitur penting seperti Interactive Voice Response (IVR) dan Ring Group.</p><img src="/2018/05/09/Membuat-server-voip/voip-4.png"><hr><p>Call Detail Record Report, adalah laporan panggilan secara jelas dan lengkap, mulai dari waktu panggilan, tujuan panggilan, lama panggilan, asal panggilan, trunk yang digunakan, tarif panggilan, dan perhitungan keuntungan yang didapat. Menu ini dapat diakses dari menu Call Report, lalu pilih CDR Report.</p><img src="/2018/05/09/Membuat-server-voip/voip-5.png"><hr><p>Server VoIP status adalah menu untuk menampilkan Status Registry user akun yang online.</p><img src="/2018/05/09/Membuat-server-voip/voip-7.png">]]></content>
      
      
        <tags>
            
            <tag> voip </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Install nginx dan Drupal</title>
      <link href="/2018/05/09/Install-nginx-dan-Drupal/"/>
      <url>/2018/05/09/Install-nginx-dan-Drupal/</url>
      <content type="html"><![CDATA[<img src="/2018/05/09/Install-nginx-dan-Drupal/Drupal8_Nginx.jpg"><h4 id="Tentang-Drupal"><a href="#Tentang-Drupal" class="headerlink" title="Tentang Drupal"></a>Tentang Drupal</h4><p>Drupal adalah sistem manajemen konten open source terkenal yang berbasis PHP. Ini tersedia secara gratis dan dirilis di bawah Lisensi Publik Umum GNU. Drupal dapat digunakan untuk semua ukuran situs web, dari situs web internasional besar hingga blog pribadi dan situs perusahaan atau pemerintah. Bagian inti drupal diberi nama “Drupal Core”, berisi sistem manajemen konten dasar, manajemen pengguna, manajemen menu, penyesuaian tata letak dan administrasi sistem, sampai sekarang, komunitas drupal telah menyediakan lebih dari 31.000 modul untuk Drupal.</p><h4 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h4><pre><code>- Ubuntu 16.04 - 64bit version.- Root privileges.</code></pre><h4 id="Install-dan-Konfigurasi-Nginx"><a href="#Install-dan-Konfigurasi-Nginx" class="headerlink" title="Install dan Konfigurasi Nginx"></a>Install dan Konfigurasi Nginx</h4><ul><li><p>Step 1 - Update the Ubuntu system<br>  Login to the ubuntu server with ssh, then become root user and update the ubuntu repository:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></li><li><p>Step 2 - Install Nginx and PHP-FPM<br>  Nginx atau “engine-x” adalah server HTTP cepat yang fokus pada kinerja tinggi dengan penggunaan memori / RAM yang rendah. Kita dapat menggunakan Nginx juga sebagai proxy terbalik, untuk protokol HTTP, HTTPS, POP3 dan IMAP. Dalam tutorial ini, kita akan menggunakan Nginx sebagai server HTTP SSL yang diaktifkan.<br>  Instal Nginx dengan perintah berikut, sebagai sudo / pengguna root:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nginx -y</span><br></pre></td></tr></table></figure><p>  Selanjutnya, instal php7.1-fpm dengan ekstensi php-gd yang diperlukan oleh inti drupal:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install software-properties-common</span><br><span class="line">sudo add-apt-repository ppa:ondrej/php</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install php7.1</span><br><span class="line">sudo apt-cache search php7.1</span><br><span class="line">sudo apt-get install php7.1 php7.1-cli php7.1-common php7.1-json php7.1-opcache php7.1-mysql php7.1-mbstring php7.1-mcrypt php7.1-zip php7.1-fpm php7.1-pgsql php7.1-xml php7.1-gd php7.1-cgi php7.1-cli php7.1-curl -y</span><br></pre></td></tr></table></figure></li><li><p>Step 3 - Configure Nginx and PHP-FPM<br>  Pada langkah ini, kita akan mengkonfigurasi Nginx untuk menggunakan php-fpm untuk melayani permintaan HTTP untuk halaman PHP. Masuk ke direktori php-fpm “/etc/php/7.1/fpm” dan edit file “php.ini”:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/php/7.1/fpm</span><br><span class="line">pico php.ini</span><br></pre></td></tr></table></figure><p>  Dalam baris ke 761, uncomment baris cgi.fix_pathinfo ganti value ke “0”.</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cgi.fix_pathinfo=0</span><br></pre></td></tr></table></figure><p>  Simpan file and exit dari editor.<br>  Sekarang kita modifikasi konfigurasi virtual host Nginx default. Edit file “default” dan aktifkan php-fpm.</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pico /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure><p>  Uncomment baris 51 - 58 to use php-fpm with nginx.</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">               include snippets/fastcgi-php.conf;</span><br><span class="line">       #</span><br><span class="line">       #       # With php7.1-cgi alone:</span><br><span class="line">       #       fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">       #       # With php7.1-fpm:</span><br><span class="line">               fastcgi_pass unix:/run/php/php7.1-fpm.sock;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>  Simpan file and exit.<br>  Kemudian uji konfigurasi Nginx dengan perintah “nginx -t” untuk memastikan bahwa konfig kita sudah benar:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure><p>  Jika tidak ada kesalahan, restart nginx dan layanan php-fpm:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/nginx restart</span><br><span class="line">systemctl restart php7.1-fpm</span><br></pre></td></tr></table></figure></li><li><p>Step 4 - Configure the VirtualHost for Drupal<br>  Kita akan menginstal Drupal 8 di direktori “/htdocs/drupal/drupal8” dengan nama domain “drupal8.local”. Silakan ganti nama domain di instalasi Anda dengan nama domain dari situs web yang ingin Anda gunakan untuk instalasi drupal ini. Pertama kita buat direktori:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /htdocs/drupal/drupal8</span><br><span class="line">pico /etc/nginx/sites-available/drupal8</span><br></pre></td></tr></table></figure><p>  Paste konfigurasi Nginx untuk drupal di bawah ke dalam file drupal8:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">   server_name drupal8.local;</span><br><span class="line">   root /htdocs/drupal/drupal8; ## &lt;-- Your only path reference.</span><br><span class="line"></span><br><span class="line">   listen 80;</span><br><span class="line">   listen [::]:80;</span><br><span class="line">   listen 443 default ssl;</span><br><span class="line"></span><br><span class="line">   ssl_certificate      /etc/nginx/ssl/drupal.crt;</span><br><span class="line">   ssl_certificate_key  /etc/nginx/ssl/drupal.key;</span><br><span class="line"></span><br><span class="line">   # Redirect HTTP to HTTPS</span><br><span class="line">   if ($scheme = http) &#123;</span><br><span class="line">       return 301 https://$server_name$request_uri;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   location = /favicon.ico &#123;</span><br><span class="line">       log_not_found off;</span><br><span class="line">       access_log off;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   location = /robots.txt &#123;</span><br><span class="line">       allow all;</span><br><span class="line">       log_not_found off;</span><br><span class="line">       access_log off;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   location ~ \..*/.*\.php$ &#123;</span><br><span class="line">       return 403;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   location ~ ^/sites/.*/private/ &#123;</span><br><span class="line">       return 403;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   # Block access to &quot;hidden&quot; files and directories whose names begin with a</span><br><span class="line">   # period. This includes directories used by version control systems such</span><br><span class="line">   # as Subversion or Git to store control files.</span><br><span class="line">   location ~ (^|/)\. &#123;</span><br><span class="line">       return 403;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   location / &#123;</span><br><span class="line">       # try_files $uri @rewrite; # For Drupal &lt;= 6</span><br><span class="line">       try_files $uri /index.php?$query_string; # For Drupal &gt;= 7</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   location @rewrite &#123;</span><br><span class="line">       rewrite ^/(.*)$ /index.php?q=$1;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   # In Drupal 8, we must also match new paths where the &apos;.php&apos; appears in the middle,</span><br><span class="line">   # such as update.php/selection. The rule we use is strict, and only allows this pattern</span><br><span class="line">   # with the update.php front controller.  This allows legacy path aliases in the form of</span><br><span class="line">   # blog/index.php/legacy-path to continue to route to Drupal nodes. If you do not have</span><br><span class="line">   # any paths like that, then you might prefer to use a laxer rule, such as:</span><br><span class="line">   #   location ~ \.php(/|$) &#123;</span><br><span class="line">   # The laxer rule will continue to work if Drupal uses this new URL pattern with front</span><br><span class="line">   # controllers other than update.php in a future release.</span><br><span class="line">   location ~ &apos;\.php$|^/update.php&apos; &#123;</span><br><span class="line">       fastcgi_split_path_info ^(.+?\.php)(|/.*)$;</span><br><span class="line">       #NOTE: You should have &quot;cgi.fix_pathinfo = 0;&quot; in php.ini</span><br><span class="line">       include fastcgi_params;</span><br><span class="line">       include snippets/fastcgi-php.conf;</span><br><span class="line">       fastcgi_param SCRIPT_FILENAME $request_filename;</span><br><span class="line">       fastcgi_intercept_errors on;</span><br><span class="line">       fastcgi_pass unix:/run/php/php7.1-fpm.sock;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   # Fighting with Styles? This little gem is amazing.</span><br><span class="line">   # location ~ ^/sites/.*/files/imagecache/ &#123; # For Drupal &lt;= 6</span><br><span class="line">   location ~ ^/sites/.*/files/styles/ &#123; # For Drpal &gt;= 7</span><br><span class="line">       try_files $uri @rewrite;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ &#123;</span><br><span class="line">       expires max;</span><br><span class="line">       log_not_found off;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  Simpan file and exit the editor.<br>  File virtual host Drupal telah dibuat, sekarang kita harus mengaktifkannya dengan membuat symlink ke file di direktori “sites-enabled”:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /etc/nginx/sites-available/drupal8 /etc/nginx/sites-enabled/</span><br></pre></td></tr></table></figure><p>  Test Nginx configuration dan restart Nginx:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br><span class="line">/etc/init.d/nginx restart</span><br></pre></td></tr></table></figure></li></ul><h4 id="Install-dan-Konfigurasi-Drupal"><a href="#Install-dan-Konfigurasi-Drupal" class="headerlink" title="Install dan Konfigurasi Drupal"></a>Install dan Konfigurasi Drupal</h4><ul><li><p>Step 1 Install Drupal Console<br>  Drupal Console adalah seperangkat alat yang dijalankan dari antarmuka baris perintah (CLI) untuk menghasilkan kode boilerplate dan berinteraksi dengan instalasi Drupal 8. Ini adalah alat penting bagi siapa pun yang menulis kode untuk Drupal.</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install curl</span><br><span class="line">curl https://drupalconsole.com/installer -L -o drupal.phar</span><br><span class="line">mv drupal.phar /usr/local/bin/drupal</span><br><span class="line">chmod +x /usr/local/bin/drupal</span><br></pre></td></tr></table></figure><p>  Install drupal console via composer</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer update drupal/console --with-dependencies</span><br></pre></td></tr></table></figure></li><li><p>Step 2 Download dan Install drupal8</p><ul><li><p>Download dan Install drupal8 via wget<br>Masuk ke direktori drupal8 yang kita buat sebelumnya dan unduh Drupal dengan wget atau drupal console. Saya akan menggunakan wget di sini:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /htdocs/drupal/drupal8</span><br><span class="line">wget https://ftp.drupal.org/files/projects/drupal-8.1.10.tar.gz</span><br><span class="line">tar -xzvf drupal-8.1.10.tar.gz</span><br><span class="line">mv drupal-8.1.10/* .</span><br><span class="line">rm -rf drupal-8.1.10</span><br></pre></td></tr></table></figure><p>Pada langkah berikutnya, kita akan mengkonfigurasi file pengaturan Drupal. Dari direktori utama Drupal, masuk ke direktori “sites/default” dan salin dua file konfigurasi “settings.php” dan “services.yml”:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd sites/default</span><br><span class="line">cp default.settings.php settings.php</span><br><span class="line">cp default.services.yml services.yml</span><br></pre></td></tr></table></figure><p>Kemudian kita harus membuat direktori baru dengan nama “files” di dalam direktori “sites/default”. Perintah “chmod” memastikan bahwa file konfigurasi dan direktori “files” dapat ditulis untuk instalasi Drupal:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir files/</span><br><span class="line">chmod a+w *</span><br></pre></td></tr></table></figure><p>Sekarang kita buka situs Drupal (dalam kasus saya <a href="http://drupal8.local" target="_blank" rel="noopener">http://drupal8.local</a>) dengan Browser web,</p><img src="/2018/05/09/Install-nginx-dan-Drupal/drupal-1.png"><p>Pilih Bahasa, saya pilih “English” disini.<br>Click “Save and continue”.</p><img src="/2018/05/09/Install-nginx-dan-Drupal/drupal-2.png"><p>Pilih installation type. kita dapat memilih standard atau minimal type. Saya pilih “Standard”</p><img src="/2018/05/09/Install-nginx-dan-Drupal/drupal-3.png"><p>Sekarang kita masuk halaman konfigurasi database. Isi rincian basis data untuk database yang kita buat untuk Drupal.</p><img src="/2018/05/09/Install-nginx-dan-Drupal/drupal-4.png"><p>Tunggu installation sampai selesai.</p><img src="/2018/05/09/Install-nginx-dan-Drupal/drupal-5.png"><p>Sekarang kita harus mengkonfigurasi pengaturan profil situs seperti nama situs, pengguna, dan kata sandi untuk admin, alamat email dll.</p><img src="/2018/05/09/Install-nginx-dan-Drupal/drupal-5.png"><p>Drupal sudah terinstall, kita akan di redirect ke Drupal home page.</p><img src="/2018/05/09/Install-nginx-dan-Drupal/drupal-6.png"></li><li><p>Download dan Install drupal8 via drupal console<br>Drupal Console  menyediakan lebih dari satu metode untuk download dan instal Drupal 8. Dalam posting ini saya akan mencantumkan langkah-langkah untuk mencapai proses instalasi.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drupal site:new</span><br></pre></td></tr></table></figure><img src="/2018/05/09/Install-nginx-dan-Drupal/drupal-console-1.png"><img src="/2018/05/09/Install-nginx-dan-Drupal/drupal-console-2.png"><img src="/2018/05/09/Install-nginx-dan-Drupal/drupal-console-3.png"><img src="/2018/05/09/Install-nginx-dan-Drupal/drupal-console-4.png"><p>Site Install</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd drupal8 (nama folder instalasi)</span><br><span class="line">composer require drupal/console:~1.0 --prefer-dist --optimize-autoloader</span><br><span class="line">drupal site:install</span><br></pre></td></tr></table></figure><img src="/2018/05/09/Install-nginx-dan-Drupal/drupal-site-install.png"><img src="/2018/05/09/Install-nginx-dan-Drupal/drupal-site-install-1.png"><p>Tunggu sampai proses instalasi selesai, selanjutnya buka browser ( <a href="http://drupal.local" target="_blank" rel="noopener">http://drupal.local</a>)</p><img src="/2018/05/09/Install-nginx-dan-Drupal/drupal-6.png"><p>Drupal sudah terinstall, kita akan di redirect ke Drupal home page.</p><p>Selamat Mencoba, semoga berhasill…</p></li></ul></li></ul>]]></content>
      
      
        <tags>
            
            <tag> nginx drupal </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Belajar Git Github</title>
      <link href="/2018/05/08/belajar-git/"/>
      <url>/2018/05/08/belajar-git/</url>
      <content type="html"><![CDATA[<h4 id="Panduan-Penggunaan-Git"><a href="#Panduan-Penggunaan-Git" class="headerlink" title="Panduan Penggunaan Git"></a>Panduan Penggunaan Git</h4><ul><li><p>Install Git di Ubuntu</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install git git-core</span><br></pre></td></tr></table></figure></li><li><p>Lakukan inisialisasi dengan mengetikkan perintah berikut: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></li></ul><p>Perintah tersebut akan membuat sebuah repository lokal untuk project kita</p><ul><li>Langkah berikutnya adalah memasukkan file-file source code serta folder kedalam staging area, yaitu suatu kondisi dimana file serta folder source code dimasukkan ke dalam repository namun dalam keadaan temporary, belum disimpan. Untuk menyimpannya gunakan perintah berikut :<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add *</span><br></pre></td></tr></table></figure></li></ul><p>Perintah tersebut akan memasukkan seluruh file dan folder yang ada pada folder Project kita. Jika ingin memasukkan satu persatu cukup tuliskan nama file lengkap dengan ekstensinya atau nama folder jika hanya ingin menambahkan satu folder :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add &quot;nama file&quot; atau,</span><br><span class="line">git add &quot;nama folder&quot;</span><br></pre></td></tr></table></figure></p><ul><li>Setelah itu kita siap untuk menyimpan source code kita kedalam repository. Ketikkan perintah berikut :<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;My Commit&quot;</span><br></pre></td></tr></table></figure></li></ul><p>Perintah diatas akan menyimpan source code kita sekaligus memberikan catatan supaya mudah kita ingat.</p><ul><li>Selanjutnya kita login ke Github.com untuk membuat sebuah repository baru dengan mengeklik tombol yang terletak pada kanan atas ( New Repository ). Perhatikan gambar berikut :<img src="/2018/05/08/belajar-git/buat-repo.png"></li></ul><p>Buat repository dengan nama “My-blog” misalnya<br><img src="/2018/05/08/belajar-git/buat-repo-blog.png"><br>centang untuk “Initialize this repository with a README” setelah itu klik tombol “Create repository”.</p><p>Sekarang kita bisa mengakses remote repository dengan url <a href="https://github.com/sameknet/My_blog.git" target="_blank" rel="noopener">https://github.com/sameknet/My_blog.git</a> misalnya. Tambahkan remote repository yang barusan kita buat supaya proyek kita bisa diupload. Berikut perintahnya :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/sameknet/My_blog.git</span><br></pre></td></tr></table></figure></p><p>Selanjutnya kita download terlebih dahulu file readme yang ada secara default ketika kita membuat repository di github dengan mengetikkan perintah :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure></p><p>Terakhir adalah mengupload ke Github dengan perintah :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p><p>masukkan username serta password github jika diminta.</p><p>cek di github, maka file dan folder kita sudah ada di repo github<br><img src="/2018/05/08/belajar-git/repo-baru.png"></p><h4 id="Tambah-amp-Komit"><a href="#Tambah-amp-Komit" class="headerlink" title="Tambah &amp; Komit"></a>Tambah &amp; Komit</h4><p>Kita bisa melakukan perubahan (penambahan ke Indeks) menggunakan :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add &lt;namaberkas&gt; atau,</span><br><span class="line">git add *</span><br></pre></td></tr></table></figure></p><p>Ini merupakan langkah awal alur-kerja dasar git. Untuk komit sepenuhnya gunakan :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;Pesan komit&quot;</span><br></pre></td></tr></table></figure></p><p>Sekarang berkas telah terkomit di HEAD, tapi belum di repositori ke github, untuk mengirimkannya ke repositori github, kita gunakan perintah berikut :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p><p>Ubah “master” sesuai branch yang kita inginkan</p><h4 id="Membuat-Branch-di-Github"><a href="#Membuat-Branch-di-Github" class="headerlink" title="Membuat Branch di Github"></a>Membuat Branch di Github</h4><p>Dalam pengembangan suatu project, akan banyak sekali fitur-fitur yang akan diimplementasikan. Dan fitur-fitur tersebut mungkin bisa dikerjaan secara bersamaan (parallel). Dan disitulah pembuatan branch diperlukan.</p><p>Misalnya branch yang satu fokus untuk mengembangkan fitur keamanan, sedangkan branch lainnya fokus untuk pengembangan tampilan. Idealnya pengembangan sebuah fitur tidak mempengaruhi fitur yang lain atau malah mempengaruhi code yang sudah stabil. Disinilah git bisa membantu kita.</p><p>Cara membuat branch dengan perintah :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch nama_branch</span><br></pre></td></tr></table></figure></p><p>Dari awal selama ini kita sebenarnya beroperasi di cabang master. Ini adalah cabang default atau standar dari git. Dan ketika kita membuat branch dengan command git tersebut diatas, kita tidak otomatis pindah ke branch. Kemungkinan kita masih di master. Untuk pindah, gunakan perintah :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout nama_branch</span><br></pre></td></tr></table></figure></p><p>Setelah kita checkout ke branch, kita bisa melakukan apa saja di file dan di directory branch, branch yang lain (termasuk master) tidak akan terpengaruhi.</p>]]></content>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
